<?xml version="1.0" encoding="UTF-8"?>
<!-- RaeenOS cppcheck configuration -->
<project>
    <root name="raeenos-root"/>
    
    <!-- Source directories to analyze -->
    <paths>
        <dir name="kernel/"/>
        <dir name="drivers/"/>
        <dir name="userland/"/>
        <dir name="pkg/"/>
        <dir name="tests/"/>
    </paths>
    
    <!-- Include directories -->
    <includedir>
        <dir name="kernel/include/"/>
        <dir name="userland/include/"/>
        <dir name="drivers/"/>
    </includedir>
    
    <!-- Defines for the target platform -->
    <defines>
        <define name="__GNUC__=11"/>
        <define name="__GNUC_MINOR__=3"/>
        <define name="__i386__"/>
        <define name="__linux__"/>
        <define name="RAEENOS"/>
        <define name="KERNEL"/>
        <define name="_GNU_SOURCE"/>
    </defines>
    
    <!-- Undefines -->
    <undefines>
        <undefine name="WIN32"/>
        <undefine name="_WIN32"/>
        <undefine name="WINDOWS"/>
    </undefines>
    
    <!-- Files to exclude from analysis -->
    <exclude>
        <path name="build/"/>
        <path name="docs/"/>
        <path name="tools/external/"/>
        <path name="*_test.c"/>
        <path name="*_mock.c"/>
    </exclude>
    
    <!-- Suppressions for false positives -->
    <suppressions>
        <!-- Suppress warnings for inline assembly -->
        <suppression id="inlineAssembly">
            <fileName>kernel/*</fileName>
        </suppression>
        
        <!-- Suppress warnings for intentional null pointer usage in low-level code -->
        <suppression id="nullPointer">
            <fileName>kernel/boot_entry.c</fileName>
        </suppression>
        
        <!-- Suppress warnings for memory mapping operations -->
        <suppression id="integerOverflow">
            <fileName>kernel/paging.c</fileName>
        </suppression>
        
        <!-- Suppress warnings for driver probe functions -->
        <suppression id="unusedFunction">
            <fileName>drivers/*/probe.c</fileName>
        </suppression>
        
        <!-- Suppress warnings for interrupt handlers -->
        <suppression id="unusedFunction">
            <functionName>*_interrupt_handler</functionName>
        </suppression>
        
        <!-- Suppress warnings for module init/exit functions -->
        <suppression id="unusedFunction">
            <functionName>*_init</functionName>
        </suppression>
        <suppression id="unusedFunction">
            <functionName>*_exit</functionName>
        </suppression>
        
        <!-- Suppress warnings for syscall implementations -->
        <suppression id="unusedFunction">
            <fileName>kernel/syscall_impl.c</fileName>
        </suppression>
    </suppressions>
    
    <!-- Libraries to model -->
    <libraries>
        <library>std</library>
        <library>posix</library>
    </libraries>
    
    <!-- Platform configuration -->
    <platform>unix64</platform>
    
    <!-- Analysis settings -->
    <check-config>true</check-config>
    <max-configs>12</max-configs>
    <max-ctu-depth>2</max-ctu-depth>
    
    <!-- Enable specific checks -->
    <check-library>true</check-library>
    <check-headers>true</check-headers>
    <check-unused-templates>true</check-unused-templates>
    
    <!-- Rule settings -->
    <rule>
        <tokenlist>normal</tokenlist>
        <pattern>sizeof\s*\(\s*"[^"]*"\s*\)</pattern>
        <message>
            <severity>warning</severity>
            <summary>sizeof() used on string literal</summary>
        </message>
    </rule>
    
    <rule>
        <tokenlist>normal</tokenlist>
        <pattern>malloc\s*\([^)]*\)[^;]*;</pattern>
        <message>
            <severity>style</severity>
            <summary>Consider using kmalloc() instead of malloc() in kernel code</summary>
        </message>
    </rule>
    
    <!-- Custom function specifications -->
    <function name="kmalloc,arg1">
        <noreturn>false</noreturn>
        <leak-ignore/>
        <arg nr="1">
            <not-uninit/>
            <valid>0:</valid>
        </arg>
    </function>
    
    <function name="kfree,arg1">
        <noreturn>false</noreturn>
        <arg nr="1">
            <not-null/>
        </arg>
    </function>
    
    <function name="panic,arg1">
        <noreturn>true</noreturn>
        <arg nr="1">
            <not-null/>
            <strz/>
        </arg>
    </function>
    
    <!-- Memory allocation functions -->
    <alloc init="false">kmalloc</alloc>
    <alloc init="true">kzalloc</alloc>
    <dealloc>kfree</dealloc>
    
    <!-- Resource allocation functions -->
    <resource>
        <alloc>request_irq</alloc>
        <dealloc>free_irq</dealloc>
    </resource>
    
    <resource>
        <alloc>ioremap</alloc>
        <dealloc>iounmap</dealloc>
    </resource>
    
    <resource>
        <alloc>pci_request_regions</alloc>
        <dealloc>pci_release_regions</dealloc>
    </resource>
</project>